{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Medob\\\\OneDrive\\\\Desktop\\\\React Movies\\\\src\\\\components\\\\MovieCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { SetFavMovies, delFavMovies } from '../store/Actions/SetMovies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieCard(props) {\n  _s();\n\n  const favmovies = useSelector(state => state.favourite);\n  const [isfav, setisfav] = useState();\n  useEffect(() => {\n    //====>phase of updata\n    for (let movie of favmovies) {\n      var x;\n\n      if (movie.id === props.id) {\n        x = 1;\n      }\n    }\n\n    if (x === 1) {\n      setisfav(true);\n    } else {\n      setisfav(false);\n    }\n\n    console.log(isfav);\n  }, [favmovies, isfav, props.id]);\n  const add = useDispatch();\n\n  const addtofav = () => {\n    add(SetFavMovies({\n      id: props.id,\n      title: props.title,\n      img: props.poster_path\n    }));\n    setisfav(true);\n    props.changed(false);\n    console.log(isfav);\n  };\n\n  const delfromfav = () => {\n    add(delFavMovies(props.id));\n    setisfav(false);\n    props.changed(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card col-md-3 m-3 col-sm-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"card-img-top\",\n      src: `https://image.tmdb.org/t/p/w500/${props.poster_path}`,\n      alt: \"Card cap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: [\" \", props.vote_average]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie-details/${props.id}`,\n          className: \"btn btn-primary m-2\",\n          children: \" Details \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas  fa-star fa-2x \",\n          onClickCapture: isfav ? delfromfav : addtofav,\n          style: {\n            color: isfav ? \"yellow\" : \"black\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 11\n  }, this);\n}\n\n_s(MovieCard, \"epDRg7G4tiyN/f18oKvexk/0wM8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["C:/Users/Medob/OneDrive/Desktop/React Movies/src/components/MovieCard.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","SetFavMovies","delFavMovies","MovieCard","props","favmovies","state","favourite","isfav","setisfav","movie","x","id","console","log","add","addtofav","title","img","poster_path","changed","delfromfav","vote_average","color"],"mappings":"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","sourcesContent":["import React, { useEffect ,useState} from 'react';\nimport { useDispatch , useSelector} from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { SetFavMovies,delFavMovies } from '../store/Actions/SetMovies';\n\n\nexport default function MovieCard(props) {\n  const favmovies = useSelector(state => state.favourite);\n  const  [isfav,setisfav] = useState()\n\n  useEffect(() => {                           //====>phase of updata\n    for(let movie of favmovies){\n      var x;\n       if (movie.id === props.id){\n          x=1\n       }    \n    }\n    if ( x===1){\n      setisfav(true)\n    } else {\n      setisfav(false)\n    }\n    console.log(isfav)\n }, [favmovies, isfav, props.id]);\n\n\n  const add = useDispatch()\n  \n  const addtofav =() =>{\n    add((SetFavMovies({id:props.id , title : props.title , img: props.poster_path})))\n    setisfav(true);\n    props.changed(false)\n    console.log(isfav)\n  }\n\n  const delfromfav = () =>{\n    add((delFavMovies(props.id)));\n    setisfav(false);\n    props.changed(false)\n  }\n\n  return  <div className=\"card col-md-3 m-3 col-sm-12\">\n            <img className=\"card-img-top\" src={`https://image.tmdb.org/t/p/w500/${props.poster_path}`} alt=\"Card cap\" />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{props.title}</h5>\n              <p className=\"card-text\" > {props.vote_average}</p>\n              <div>\n\n              <Link to={`/movie-details/${props.id}`} className=\"btn btn-primary m-2\" > Details </Link>\n              \n              <i class=\"fas  fa-star fa-2x \" onClickCapture={ isfav ? delfromfav : addtofav} style={{color: isfav? \"yellow\" : \"black\"}} ></i>\n              </div>\n              \n            </div>\n          </div>\n}\n"]},"metadata":{},"sourceType":"module"}