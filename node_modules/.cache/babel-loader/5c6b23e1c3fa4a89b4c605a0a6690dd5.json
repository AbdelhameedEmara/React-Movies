{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Medob\\\\OneDrive\\\\Desktop\\\\React Movies\\\\src\\\\pages\\\\MoviesList.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport MovieCard from '../components/MovieCard';\nimport MyPagination from '../components/MyPagination';\nimport { SetMovies } from '../store/Actions/SetMovies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MoviesList() {\n  _s();\n\n  const [movies, setmovies] = useState([]);\n  const [Mname, setMname] = useState('');\n  const [searchmode, setsearchmode] = useState(false);\n  const [change, setchange] = useState([]);\n  let dispatch = useDispatch(); //to dispatch action\n\n  let mymovies = useSelector(state => state.allmovies.list); /// it take callback function when called take all object state\n\n  useEffect(() => {\n    ///  mounting\n    dispatch(SetMovies(1)); // we call dispatch fun and pass it setmovies action \n  });\n  useEffect(() => {//  updata\n  }, [movies, change]);\n\n  function ischange(e) {\n    setchange([...change, e]);\n  } // function getmoviebypage(pgno) {  /////search\n  //   setsearchmode(false)\n  //   dispatch(SetMovies(pgno))\n  // }\n  // function backtoall(e) {\n  //   e.preventDefault();\n  //   setsearchmode(true);\n  //   getmoviebypage(1);\n  // }\n  // function getname(e) {\n  //   setMname(e.target.value)\n  // }\n  // function search(e) {\n  //   e.preventDefault();\n  //   setsearchmode(true)\n  //   axios.get(`https://api.themoviedb.org/3/search/movie?api_key=7a1c19ea3c361a4d3cc53eb70ef8298c&query=${Mname}`).then(\n  //     res => {\n  //       setmovies(res.data.results)\n  //       console.log(res.data.results)\n  //     }\n  //   )\n  //   console.log(e)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"m-3\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: \" Movies List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"input-group mb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-dark\",\n        style: {\n          visibility: searchmode === false ? \"hidden\" : \"visible\"\n        },\n        onClick: e => backtoall(e),\n        children: \" Back To All Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: mymovies.map(movie => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(MovieCard, {\n              changed: e => ischange(e),\n              isfav: false,\n              id: movie.id,\n              title: movie.title,\n              poster_path: movie.poster_path,\n              vote_average: movie.vote_average\n            }, movie.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 p-5\",\n        children: /*#__PURE__*/_jsxDEV(MyPagination, {\n          hide: searchmode,\n          onmove: e => getmoviebypage(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MoviesList, \"F/p91ttAXAqP1s7Wj2CH7L5DNJc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MoviesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"sources":["C:/Users/Medob/OneDrive/Desktop/React Movies/src/pages/MoviesList.js"],"names":["axios","React","useState","useEffect","useDispatch","useSelector","MovieCard","MyPagination","SetMovies","MoviesList","movies","setmovies","Mname","setMname","searchmode","setsearchmode","change","setchange","dispatch","mymovies","state","allmovies","list","ischange","e","textAlign","visibility","backtoall","map","movie","id","title","poster_path","vote_average","getmoviebypage"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport MovieCard from '../components/MovieCard';\nimport MyPagination from '../components/MyPagination';\nimport { SetMovies } from '../store/Actions/SetMovies';\n\n\nexport default function MoviesList() {\n  const [movies, setmovies] = useState([])\n  const [Mname, setMname] = useState('');\n  const [searchmode, setsearchmode] = useState(false);\n  const [change, setchange] = useState([])\n\n  let dispatch = useDispatch()                //to dispatch action\n\n  let mymovies = useSelector((state) => state.allmovies.list)          /// it take callback function when called take all object state\n\n  useEffect(() => {    ///  mounting\n\n    dispatch(SetMovies(1))   // we call dispatch fun and pass it setmovies action \n\n  },);\n\n  useEffect(() => {          //  updata\n  }, [movies, change]);\n\n  function ischange(e) {\n    setchange([...change, e])\n  }\n\n  // function getmoviebypage(pgno) {  /////search\n  //   setsearchmode(false)\n  //   dispatch(SetMovies(pgno))\n\n  // }\n  // function backtoall(e) {\n  //   e.preventDefault();\n  //   setsearchmode(true);\n  //   getmoviebypage(1);\n  // }\n\n  // function getname(e) {\n  //   setMname(e.target.value)\n  // }\n\n  // function search(e) {\n  //   e.preventDefault();\n  //   setsearchmode(true)\n  //   axios.get(`https://api.themoviedb.org/3/search/movie?api_key=7a1c19ea3c361a4d3cc53eb70ef8298c&query=${Mname}`).then(\n  //     res => {\n  //       setmovies(res.data.results)\n  //       console.log(res.data.results)\n\n  //     }\n  //   )\n  //   console.log(e)\n  // }\n\n  return (\n    <>\n      <h1 className='m-3' style={{ textAlign: \"center\" }}> Movies List</h1>\n\n      <div className=\"container\">\n\n        <div class=\"input-group mb-3\">\n          {/* <form className='col-10' onSubmit={(e) => { search(e) }}>\n            <input type=\"text\" value={Mname} name='Mname' onChangeCapture={(e) => getname(e)} class=\"form-control\" placeholder=\"Movie name ...\"\n              aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\n            <div className=\"input-group-append\">\n              <button className=\"btn btn-outline-secondary mt-2\" type=\"submit\">Search</button>\n            </div>\n          </form> */}\n\n\n        </div> <button className='btn btn-outline-dark' style={{ visibility: searchmode === false ? \"hidden\" : \"visible\" }} onClick={(e) => backtoall(e)} > Back To All Movies</button>\n        <div className='row'>\n\n          {\n            mymovies.map(movie => {\n              return (<>\n                <MovieCard changed={(e) => ischange(e)} isfav={false} key={movie.id} id={movie.id} title={movie.title} poster_path={movie.poster_path} vote_average={movie.vote_average} />\n              </>\n              )\n            })\n          }\n        </div>\n        <div className='col-12 p-5'>\n          <MyPagination hide={searchmode} onmove={(e) => getmoviebypage(e)} />\n        </div>\n      </div>\n\n    </>)\n}\n"]},"metadata":{},"sourceType":"module"}