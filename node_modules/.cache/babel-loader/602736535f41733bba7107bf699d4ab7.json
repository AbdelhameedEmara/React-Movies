{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Medob\\\\OneDrive\\\\Desktop\\\\React Movies\\\\src\\\\pages\\\\Loginform.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Loginform = () => {\n  _s();\n\n  const validEmail = new RegExp('^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$');\n  const [passtype, setpasstype] = useState(\"password\");\n  const [loginform, setloginform] = useState({\n    email: '',\n    password: ''\n  });\n  const [errors, seterrors] = useState({\n    email: null,\n    password: null\n  });\n\n  const submitForm = e => {\n    e.preventDefault();\n\n    for (var item in loginform) {\n      console.log(item);\n\n      if (loginform[item] === '') {\n        seterrors({ ...errors,\n          email: loginform.email === '' ? \"this field is required\" : null,\n          password: loginform.password === '' ? \"this field is required\" : null\n        });\n        return 0;\n      }\n    }\n\n    console.log(loginform);\n  };\n\n  function update(e) {\n    if (e.target.name === \"email\") {\n      setloginform({ ...loginform,\n        email: e.target.value\n      });\n      seterrors({ ...errors,\n        email: validEmail.test(e.target.value) === false ? \"please write a vaild email !\" : null\n      });\n    } else if (e.target.name === \"password\") {\n      setloginform({ ...loginform,\n        password: e.target.value\n      });\n      seterrors({ ...errors,\n        password: e.target.value.length < 8 ? \"password should have more than 8 charctricts\" : null\n      });\n    }\n  }\n\n  function showpass(e) {\n    if (e.target.checked === true) {\n      setpasstype(\"text\");\n      console.log(passtype);\n    } else {\n      setpasstype(\"password\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container d-flex justify-content-center  align-items-center justify-content-center \",\n      style: {\n        height: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"col-7 text-center border p-3 rounded\",\n        onSubmit: e => submitForm(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            class: \"form-label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            class: \"form-control\",\n            id: \"email\",\n            placeholder: \"you@example.com\",\n            value: loginform.email,\n            name: \"email\",\n            onChange: e => update(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"text-danger text-left mt-1\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            class: \"form-label mt-2\",\n            children: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: passtype,\n            class: \"form-control\",\n            id: \"password\",\n            name: \"password\",\n            onChange: e => update(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"text-danger\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"mt-2 m-2\",\n            type: 'checkbox',\n            onChange: e => showpass(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \" show password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-dark m-2 mt-3\",\n          disabled: errors.email && errors.password == null ? true : false,\n          children: \" Login \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-outline-dark mt-3 m-2 \",\n          to: '/register',\n          children: \"  New user \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Loginform, \"iyXhkn73QwR+RqvVEsFhm/crYuY=\");\n\n_c = Loginform;\nexport default Loginform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loginform\");","map":{"version":3,"sources":["C:/Users/Medob/OneDrive/Desktop/React Movies/src/pages/Loginform.js"],"names":["React","useState","Link","Loginform","validEmail","RegExp","passtype","setpasstype","loginform","setloginform","email","password","errors","seterrors","submitForm","e","preventDefault","item","console","log","update","target","name","value","test","length","showpass","checked","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState} from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Loginform = () => {\n    const validEmail = new RegExp(\n        '^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$'\n     );\n     const [passtype, setpasstype] = useState(\"password\")\n  const [loginform, setloginform] = useState({\n      email : '',\n      password : '',\n  })\n  const [errors, seterrors] = useState({\n    email :null,\n    password : null,\n})\nconst submitForm = (e)=>{\n    e.preventDefault();\n    for (var item in loginform){\n      console.log(item)\n        \n      if (loginform[item] === ''){\n        seterrors({\n          ...errors , \n          email : loginform.email === ''? \"this field is required\": null,\n          password : loginform.password === ''? \"this field is required\": null\n         })\n       return 0\n      } \n     \n  }\nconsole.log(loginform)\n}\nfunction update(e){\n  if (e.target.name === \"email\"){\n     setloginform({\n         ...loginform,\n         email : e.target.value\n     })\n    seterrors({\n          ...errors ,\n          email :\n          validEmail.test(e.target.value) === false ? \"please write a vaild email !\" : null\n    })\n    \n    \n    }\n     else if (e.target.name === \"password\"){\n        setloginform({\n            ...loginform,\n            password : e.target.value\n     })\n     seterrors({\n          ...errors,\n          password: \n          e.target.value.length < 8 ? \"password should have more than 8 charctricts\" : null\n     })\n  }\n}\n\nfunction showpass(e){\n   \n    if (e.target.checked === true){\n     setpasstype(\"text\")\n      console.log(passtype)\n    } else {\n        setpasstype(\"password\")\n    }\n}\n  return (\n    <>\n      <div className=\"container d-flex justify-content-center  align-items-center justify-content-center \" style={{ height: '80vh' }}>\n        <form className='col-7 text-center border p-3 rounded' onSubmit={(e) => submitForm(e)}>\n          <div>\n            <label htmlFor=\"email\" class=\"form-label\">\n              Email \n            </label>\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              id=\"email\"\n              placeholder=\"you@example.com\"\n              value={loginform.email}\n              name=\"email\"\n              onChange={(e)=> update(e)}\n            />\n            <div class=\"text-danger text-left mt-1\">\n              {errors.email}\n            </div>\n            <label htmlFor=\"password\" class=\"form-label mt-2\">\n              password \n            </label>\n            <input\n              type={passtype}\n              class=\"form-control\"\n              id=\"password\"\n              name= \"password\"\n              onChange={(e)=> update(e)}\n            />\n            <div class=\"text-danger\">\n               {errors.password}\n            </div>\n            <input className='mt-2 m-2' type={'checkbox'}  onChange={ (e)=> showpass(e)} />  \n            <label htmlFor=\"password\"> show password </label>\n          </div>\n          <button type='submit' className='btn btn-dark m-2 mt-3' disabled={errors.email && errors.password == null ? true : false} > Login </button>\n             <Link className='btn btn-outline-dark mt-3 m-2 ' to={'/register'}>  New user </Link>\n        </form>\n      </div>\n    </>\n  );\n};\nexport default Loginform;\n"]},"metadata":{},"sourceType":"module"}